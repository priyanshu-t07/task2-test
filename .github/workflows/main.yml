
name: Test, Build, Scan & Deploy

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_REPO: priyanshu777/demo
      AWS_REGION: us-east-1
      CLUSTER_NAME: priyanshu-eks-cluster

    steps:
    # Checkout source
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup Docker Buildx
    - name: Docker Setup
      uses: docker/setup-buildx-action@v2

    # Docker Hub Login
    - name: Docker Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Generate unique image version tag
    - name: Docker tag
      id: version
      run: |
        VERSION=v$(date +"%Y%m%d%H%M%S")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t $IMAGE_REPO:${{ env.VERSION }} .

    # Install and Run Trivy Scan (APT method)
    - name: Install and Run Trivy Scan
      run: |
       echo "Installing Trivy using official installer..."
       curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
       echo "Running Trivy vulnerability scan..."
       trivy image --exit-code 1 --severity CRITICAL,HIGH $IMAGE_REPO:${{ env.VERSION }}

    # Push Docker image
    - name: Push Docker Image
      run: |
        docker push $IMAGE_REPO:${{ env.VERSION }}

    # Update Kubernetes manifest with new image version
    - name: Update K8s Manifests
      run: |
        sed -i "s|image: $IMAGE_REPO:.*|image: $IMAGE_REPO:${{ env.VERSION }}|g" k8s/deploy/deployment.yaml
        cat k8s/deploy/deployment.yaml

    # Commit updated manifest
    - name: Commit the changes
      run: |
        git config --global user.email "bot@github.com"
        git config --global user.name "GitHub Actions Bot"
        git checkout main
        git add k8s/deploy/deployment.yaml
        git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
        git push origin main

    # Setup kubeconfig manually
    - name: Setup kubeconfig
      run: |
        mkdir -p ~/.kube
        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
        kubectl get nodes

    # Apply Sealed Secrets
    - name: Apply Sealed Secrets
      run: |
        kubectl apply -f k8s/secrets/sealedsecret.yaml

    # Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deploy/deployment.yaml
